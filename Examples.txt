	//  Example of the paper of the three danish

	states = new vector<Fraction>;
	/*
 states->push_back(0);
 states->push_back(9);
 states->push_back(3);
 states->push_back(6);
 states->push_back(9);
 states->push_back(0);

 for (int i = 0; i <= 5; ++i){
   transitions->push_back(vector<Fraction>());
   for (int j = 0; j <= 5; ++j)
    (*transitions)[i].push_back(-1);
 }

  (*transitions)[1][0] = 0;
  (*transitions)[2][1] = 0;
  (*transitions)[2][4] = 0;
  (*transitions)[3][1] = 3;
  (*transitions)[3][2] = 0;
  (*transitions)[4][3] = 0;
  (*transitions)[4][5] = 0;
  (*transitions)[5][0] = 5;

  //1 if owned by the controller
  owners->push_back(1);
  owners->push_back(0);
  owners->push_back(0);
  owners->push_back(1);
  owners->push_back(1);
  owners->push_back(1);

 cout << "SPTG initalized" << endl;*/



/* First example
	PTG* ptg = new PTG(5);


	ptg->setNbResets(1);

	ptg->setState(0,0);
	ptg->setState(1,6);
	ptg->setState(2,2);
	ptg->setState(3,5);
	ptg->setState(4,3);

	ptg->setTransition(1,3,1);
	ptg->setTransition(1,4,5);
	ptg->setTransition(2,1,1);
	ptg->setTransition(3,0,3);
	ptg->setTransition(3,4,1);
	ptg->setTransition(4,0,1);
	ptg->setTransition(4,2,2);


	ptg->setOwner(0,1);
	ptg->setOwner(1,1);
	ptg->setOwner(2,0);
	ptg->setOwner(3,0);
	ptg->setOwner(4,1);


	 ptg->setReset(1,4,true);

	ptg->setStartCst(1,3,1);
	ptg->setEndCst(1,3,5);
	ptg->setStartCst(1,4,0);
	ptg->setEndCst(1,4,2);
	ptg->setStartCst(2,1,1);
	ptg->setEndCst(2,1,3);
	ptg->setStartCst(3,0,0);
	ptg->setEndCst(3,0,5);
	ptg->setStartCst(3,4,4);
	ptg->setEndCst(3,4,4);
	ptg->setStartCst(4,2,2);
	ptg->setEndCst(4,2,2);
	ptg->setStartCst(4,0,1);
	ptg->setEndCst(4,0,3);


*/

	//Second example (more interesting because solveSPTG change the strategy
PTG* ptg = new PTG(6);


	ptg->setState(0,0);
	ptg->setState(1,2);
	ptg->setState(2,5);
	ptg->setState(3,1);
	ptg->setState(4,2);
	ptg->setState(5,3);

	ptg->setTransition(1,4,2);
	ptg->setTransition(2,1,3);
	ptg->setTransition(2,5,1);
	ptg->setTransition(3,0,1);
	ptg->setTransition(4,3,2);
	ptg->setTransition(4,0,0);
	ptg->setTransition(5,4,1);
	ptg->setTransition(5,0,2);

	ptg->setOwner(0,1);
	ptg->setOwner(1,1);
	ptg->setOwner(2,1);
	ptg->setOwner(3,1);
	ptg->setOwner(4,0);
	ptg->setOwner(5,0);


	ptg->setStartCst(1,4,0);
	ptg->setEndCst(1,4,3);
	ptg->setStartCst(2,1,0);
	ptg->setEndCst(2,1,1);
	ptg->setStartCst(2,5,2);
	ptg->setEndCst(2,5,3);
	ptg->setStartCst(3,0,0);
	ptg->setEndCst(3,0,3);
	ptg->setStartCst(4,3,1);
	ptg->setEndCst(4,3,3);
	ptg->setStartCst(4,0,2);
	ptg->setEndCst(4,0,2);
	ptg->setStartCst(5,4,1);
	ptg->setEndCst(5,4,2);
	ptg->setStartCst(5,0,0);
	ptg->setEndCst(5,0,3);

	ptg->setReset(4,3,true);
	ptg->setNbResets(1);
		
		//Third example
		
		PTG* ptg = new PTG(5);

ptg->setState(0,0);
ptg->setState(1,1);
ptg->setState(2,3);
ptg->setState(3,1);
ptg->setState(4,3);

ptg->setTransition(1,2,2);
ptg->setTransition(1,3,1);
ptg->setTransition(2,0,5);
ptg->setTransition(2,3,0);
ptg->setTransition(3,0,1);
ptg->setTransition(3,4,3);
ptg->setTransition(4,1,2);

ptg->setOwner(0,1);
ptg->setOwner(1,0);
ptg->setOwner(2,1);
ptg->setOwner(3,0);
ptg->setOwner(4,1);

ptg->setStartCst(1,2,1);
ptg->setStartCst(1,3,0);
ptg->setStartCst(2,0,0);
ptg->setStartCst(2,3,1);
ptg->setStartCst(3,0,0);
ptg->setStartCst(3,4,0);
ptg->setStartCst(4,1,0);
ptg->setEndCst(1,2,2);
ptg->setEndCst(1,3,2);
ptg->setEndCst(2,0,1);
ptg->setEndCst(2,3,2);
ptg->setEndCst(3,0,2);
ptg->setEndCst(3,4,2);
ptg->setEndCst(4,1,2);

ptg->setReset(4,1,true);
ptg->setReset(2,3,true);
ptg->setNbResets(2);
	
	
	=====Another example
	PTG* ptg = new PTG(6);

	ptg->setState(0,0);
	ptg->setState(1,3);
	ptg->setState(2,2);
	ptg->setState(3,0);
	ptg->setState(4,1);
	ptg->setState(5,5);

	ptg->setTransition(1,3,1);
	ptg->setTransition(2,1,2);
	ptg->setTransition(2,3,1);
	ptg->setTransition(2,4,2);
	ptg->setTransition(2,5,1);
	ptg->setTransition(3,0,0);
	ptg->setTransition(3,4,2);
	ptg->setTransition(4,5,3);
	ptg->setTransition(5,0,2);

	ptg->setOwner(0,1);
	ptg->setOwner(1,1);
	ptg->setOwner(2,1);
	ptg->setOwner(3,0);
	ptg->setOwner(4,0);
	ptg->setOwner(5,1);

	ptg->setStartCst(1,3,2);
	ptg->setStartCst(2,1,1);
	ptg->setStartCst(2,3,0);
	ptg->setStartCst(2,4,0);
	ptg->setStartCst(2,5,0);
	ptg->setStartCst(3,4,0);
	ptg->setStartCst(3,0,1);
	ptg->setStartCst(4,5,1);
	ptg->setStartCst(5,0,0);
	ptg->setEndCst(1,3,2);
	ptg->setEndCst(2,1,2);
	ptg->setEndCst(2,3,2);
	ptg->setEndCst(2,4,1);
	ptg->setEndCst(2,5,2);
	ptg->setEndCst(3,4,1);
	ptg->setEndCst(3,0,2);
	ptg->setEndCst(4,5,2);
	ptg->setEndCst(5,0,2);

	ptg->setReset(3,4,true);
	ptg->setReset(2,5,true);

	ptg->setNbResets(2);